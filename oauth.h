/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _OAUTH_H_RPCGEN
#define _OAUTH_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


struct authorization_payload {
	char *id;
};
typedef struct authorization_payload authorization_payload;

struct access_token_payload {
	char *token;
};
typedef struct access_token_payload access_token_payload;

struct access_token_response {
	char *resource_token;
	char *refresh_token;
	int valability;
};
typedef struct access_token_response access_token_response;

struct request_access_token_1_argument {
	authorization_payload arg1;
	access_token_payload arg2;
};
typedef struct request_access_token_1_argument request_access_token_1_argument;

#define OAUTH_PROG 0x12345678
#define OAUTH_VERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define REQUEST_AUTHORIZATION 1
extern  char ** request_authorization_1(authorization_payload , CLIENT *);
extern  char ** request_authorization_1_svc(authorization_payload , struct svc_req *);
#define REQUEST_ACCESS_TOKEN 2
extern  access_token_response * request_access_token_1(authorization_payload , access_token_payload , CLIENT *);
extern  access_token_response * request_access_token_1_svc(authorization_payload , access_token_payload , struct svc_req *);
extern int oauth_prog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define REQUEST_AUTHORIZATION 1
extern  char ** request_authorization_1();
extern  char ** request_authorization_1_svc();
#define REQUEST_ACCESS_TOKEN 2
extern  access_token_response * request_access_token_1();
extern  access_token_response * request_access_token_1_svc();
extern int oauth_prog_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_authorization_payload (XDR *, authorization_payload*);
extern  bool_t xdr_access_token_payload (XDR *, access_token_payload*);
extern  bool_t xdr_access_token_response (XDR *, access_token_response*);
extern  bool_t xdr_request_access_token_1_argument (XDR *, request_access_token_1_argument*);

#else /* K&R C */
extern bool_t xdr_authorization_payload ();
extern bool_t xdr_access_token_payload ();
extern bool_t xdr_access_token_response ();
extern bool_t xdr_request_access_token_1_argument ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_OAUTH_H_RPCGEN */
